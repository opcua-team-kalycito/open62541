#!/bin/bash
# -*- sh -*-

: << =cut

=head1 NAME

publisherThreadLatencyStatistics - Plugin to monitor publisher thread execution time

=head1 CONFIGURATION

This is a wildcard plugin. To monitor publisher thread execution time, link
publisherThreadLatencyStatistics file in /etc/munin/plugins/ folder to this file. E.g.

  ln -s /usr/share/munin/plugins/publisherThreadLatencyStatistics \
        /etc/munin/plugins/publisherThreadLatencyStatistics



=head1 NOTES

If run with the "autoconf"-parameter, give our opinion on whether we
should be run on this system or not. This is optional, and only used
by munin-config. In the case of this plugin, we should most probably
always be included.

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

. $MUNIN_LIBDIR/plugins/plugin.sh

# If run with the "autoconf"-parameter, give our opinion on wether we
# should be run on this system or not. This is optinal, and only used by
# munin-config. In the case of this plugin, we should most probably
# always be included.
if [ "$1" = "autoconf" ]; then
        echo yes
        exit 0
fi

if [ "$1" = "config" ]; then
        #Warnings and critical messages can be created using below commands. For now, it has been commented.

        # The title of the graph
        echo "graph_title Publisher thread execution time"
        # Arguments to "rrdtool graph". In this case, tell it that the
        # lower limit of the graph is '0', and that 1k=1000 (not 1024)
        #echo 'graph_args --base 0'
        # The Y-axis label
        echo 'graph_vlabel Latency (ns)'
        # We want Cur/Min/Avg/Max unscaled (i.e. 0.42 microseconds instead of
        # 420 millimicroseconds)
        echo 'graph_scale no'
        # Graph category. Defaults to 'other'
        echo 'graph_category network'
        echo 'graph_printf %3.0lf'
        # This one is purely to add an explanation to the web page. The first
        # one is for the graph itself, while the second one is for the
        # individual fields.
        echo 'graph_info This graph shows the total execution time of Publisher thread. The execution time is computed between the instant the control shifts to Publisher thread and the instant at which the control resumes to the user-space application'

        echo "publisher_latency.label Publisher thread execution time"
        echo "publisher_latency.info Publisher thread execution time"

        # Last, if run with the "config"-parameter, quit here (don't
        # display any data)
        exit 0
fi

if test -e /usr/local/src/open62541_pubsub_maxlatency.txt
then
    #Obtain the maximum latency from the text file and convert it using cdef function and plot the jitter of the maximum latencies
    latency=`cat  /usr/local/src/open62541_pubsub_maxlatency.txt |  tr -s " " | cut -d" " -f5`
elif test -e /usr/local/src/open62541_pubsub_maxlatency_loopback.txt
then
    latency=`cat  /usr/local/src/open62541_pubsub_maxlatency_loopback.txt |  tr -s " " | cut -d" " -f2`
fi
echo "publisher_latency.value $latency"

